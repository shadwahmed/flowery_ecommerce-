// Mocks generated by Mockito 5.4.4 from annotations
// in flower_ecommerce/test/Features/profile/presentation/viewmodel/profile_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flower_ecommerce/core/common/api_result.dart' as _i3;
import 'package:flower_ecommerce/Features/profile/domain/entities/profile_entity.dart'
    as _i6;
import 'package:flower_ecommerce/Features/profile/domain/repository/profile_repo.dart'
    as _i2;
import 'package:flower_ecommerce/Features/profile/domain/use_cases/profile_usecase.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProfileRepo_0 extends _i1.SmartFake implements _i2.ProfileRepo {
  _FakeProfileRepo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileUseCase extends _i1.Mock implements _i4.ProfileUseCase {
  MockProfileUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepo get profileRepo => (super.noSuchMethod(
        Invocation.getter(#profileRepo),
        returnValue: _FakeProfileRepo_0(
          this,
          Invocation.getter(#profileRepo),
        ),
      ) as _i2.ProfileRepo);

  @override
  set profileRepo(_i2.ProfileRepo? _profileRepo) => super.noSuchMethod(
        Invocation.setter(
          #profileRepo,
          _profileRepo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.Result<_i6.ProfileEntity?>> getProfileData(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileData,
          [token],
        ),
        returnValue: _i5.Future<_i3.Result<_i6.ProfileEntity?>>.value(
            _FakeResult_1<_i6.ProfileEntity?>(
          this,
          Invocation.method(
            #getProfileData,
            [token],
          ),
        )),
      ) as _i5.Future<_i3.Result<_i6.ProfileEntity?>>);
}
